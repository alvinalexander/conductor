{"version":3,"sources":["coordinateTransform.js","components/VideoContainer.jsx","components/VideoFrame.jsx","components/GestureControl.jsx","components/Loader.jsx","components/Header.jsx","components/App.jsx","components/Root.jsx","serviceWorker.js","web-midi.js","index.js"],"names":["scale_to_char","val","max_val","min_val","mapped_val","Math","round","min","max","get_index_tip_x","hand_prediction","video_width","video_height","error","console","get_index_tip_y","get_index_tip_to_base_dist","index3D","palmBase3D","sqrt","compute_spread","thumb3D","middle3D","ring3D","pinky3D","norm","centerOfMass_x","centerOfMass_y","sumSquare","compute_yaw","dist_x","abs","dist_z","atan","compute_roll","dist_y","useStyles","makeStyles","root","minWidth","maxWidth","pos","marginBottom","VideoContainer","children","classes","Card","className","CardContent","tfjsWasm","version","videoWidth","videoHeight","fingerLookupIndices","thumb","indexFinger","middleFinger","ringFinger","pinky","VideoFrame","props","state","backend","videoRef","React","createRef","canvasRef","ctx","y","x","r","beginPath","arc","PI","fill","keypoints","keypointsArray","i","length","this","drawPoint","fingers","Object","keys","finger","points","map","idx","drawPath","closePath","region","Path2D","moveTo","point","lineTo","stroke","navigator","mediaDevices","getUserMedia","Error","video","current","facingMode","width","height","stream","window","srcObject","Promise","resolve","onloadedmetadata","setupCamera","play","tf","handpose","model","setState","loadVideo","onInitComplete","landmarksRealTime","canvas","getContext","translate","scale","midi_output","WebMidi","outputs","log","name","stats","Stats","showPanel","document","getElementById","appendChild","dom","domElement","style","position","bottom","left","top","clearRect","strokeStyle","fillStyle","frameLandmarks","activeGestures","gestures","begin","drawImage","estimateHands","predictions","result","landmarks","drawKeypoints","annotations","entries","gestureType","isActive","localeCompare","midiVal","sendControlChange","end","requestAnimationFrame","font","textBaseline","forEach","prediction","bbox","lineWidth","strokeRect","textWidth","measureText","class","textHeight","parseInt","fillRect","fillText","score","toFixed","id","display","transform","ref","Component","theme","flexGrow","appBar","backgroundColor","title","GestureControl","onGestureToggle","FormControl","component","FormLabel","Typography","variant","FormGroup","FormControlLabel","control","Switch","checked","xcontrol","onChange","label","labelPlacement","ycontrol","spread","rotation","roll","proximity","pitch","yaw","FormHelperText","Loader","open","Backdrop","zIndex","color","flexDirection","justifyContent","CircularProgress","size","gutterBottom","Header","AppBar","Toolbar","App","heigh","element","undefined","initializing","toggleMapping","bind","handleGestureToggle","completeInit","mapping","event","target","paper","padding","textAlign","videoArea","Grid","container","item","xs","Paper","elevation","square","justify","alignItems","Root","Boolean","location","hostname","match","webMidiInit","reject","enable","err","ReactDOM","render","init","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.07c619fe.chunk.js","sourcesContent":["/**\n * Scale an input value from input range [min_val, max_val]\n * to char range [0, 127].\n * Works with negative values as well.\n * Inputs:\n *    :val:      Input value to scale\n *    :max_val:  Max value :val: can take\n *    :min_val:  Min value :val: can take\n * Return a float value, scaled to [0, 127]\n */\nexport function scale_to_char(val, max_val, min_val) {\n  let mapped_val = Math.round((val - min_val) * 127 / (max_val - min_val));\n  mapped_val = Math.min(127, Math.max(0, mapped_val));\n  return mapped_val;\n}\n\n/**\n * Scale an input value from input range [inMin, inMax] to output range\n * [outMin, outMax]\n * Works with negative values as well.\n * Inputs:\n *    :val:      Input value to scale\n *    :inMin:    Min value :val: can take\n *    :inMax:    Max value :val: can take\n *    :outMin:   Min value the output of mapping :val: can take\n *    :outMax:   Max value the output of mapping :val: can take\n * Return a float value, scaled to [outMin, outMax]\n */\nexport function scale(val, inMin, inMax, outMin, outMax) {\n  return Math.min(outMax, Math.max(0, (val - inMin) * (outMax - outMin) / (inMax - inMin) + outMin));\n}\n\n/**\n * Retrieve position of the tip of the index finger, convert to midi range\n *    :hand_prediction:       Object returned from model.estimateHands()\n *    :video_width:           Width of video\n *    :video_height:          Height of video\n */\nexport function get_index_tip_x(hand_prediction, video_width, video_height) {\n  // Each finger has 4 joints, from palm to tip: 0 to 3\n  let finger_joint = 3;\n  let x = 0\n\n  try {\n    let index_tip_x = hand_prediction[0][\"annotations\"][\"indexFinger\"][finger_joint][x];\n\n    return scale_to_char(index_tip_x, video_width, 0);\n    //return scale(index_tip_x, 290, 230, 10, 110);\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n * Idem as get_index_tip_x, but for the y axis\n */\nexport function get_index_tip_y(hand_prediction, video_width, video_height) {\n  // Each finger has 4 joints, from palm to tip: 0 to 3\n  let finger_joint = 3;\n  let y = 1\n\n  try {\n    let index_tip_y = hand_prediction[0][\"annotations\"][\"indexFinger\"][finger_joint][y];\n\n    return 127 - scale_to_char(index_tip_y, video_height, 0);\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n * Idem as get_index_tip_x, but for the z axis\n */\nexport function get_index_tip_z(hand_prediction, video_width, video_height) {\n  // Each finger has 4 joints, from palm to tip: 0 to 3\n  let finger_joint = 3;\n  let z = 2\n\n  try {\n    let index_tip_z = hand_prediction[0][\"annotations\"][\"indexFinger\"][finger_joint][z];\n\n    return 127 - scale_to_char(-index_tip_z, 0, 100);\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function get_index_tip_to_base_dist(hand_prediction, video_width, video_height) {\n  // Each finger has 4 joints, from palm to tip: 0 to 3\n  let finger_joint = 3;\n  let z = 2\n\n  try {\n    // Each finger has 4 joints, from palm to tip: 0 to 3\n    let tip_joint = 3;\n    let index3D = hand_prediction[0][\"annotations\"][\"indexFinger\"][tip_joint];\n    let palmBase3D = hand_prediction[0][\"annotations\"][\"palmBase\"][0];\n    let index_to_base_dist = Math.sqrt((palmBase3D[0] - index3D[0])  ** 2 + (palmBase3D[1] - index3D[1])  ** 2)\n\n    return scale_to_char(index_to_base_dist, 100, 500);\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n/**\n * Compute spread of hand\n *    :hand_prediction:       Object returned from model.estimateHands()\n *    :video_width:           Width of video\n *    :video_height:          Height of video\n * Get a measure of hand spread, convert to midi range\n * Note: To mitigate the effect of scale (for a given hand opening, the spread looks to be\n * larger as the hand comes closer to the camera, though it may not have actually spread wider),\n * we normalize using the distance between the palm base and the based of each finger.\n */\nexport function compute_spread(hand_prediction, video_width, video_height) {\n  // Each finger has 4 joints, from palm to tip: 0 to 3\n  let tip_joint = 3;\n  try {\n    let thumb3D = hand_prediction[0][\"annotations\"][\"thumb\"][tip_joint];\n    let index3D = hand_prediction[0][\"annotations\"][\"indexFinger\"][tip_joint];\n    let middle3D = hand_prediction[0][\"annotations\"][\"middleFinger\"][tip_joint];\n    let ring3D = hand_prediction[0][\"annotations\"][\"ringFinger\"][tip_joint];\n    let pinky3D = hand_prediction[0][\"annotations\"][\"pinky\"][tip_joint];\n    let palmBase3D = hand_prediction[0][\"annotations\"][\"palmBase\"][0];\n\n    // Use distance between palm base and middle finger base as normalizer\n    let norm = (Math.sqrt((palmBase3D[0] - thumb3D[0])  ** 2 + (palmBase3D[1] - thumb3D[1])  ** 2) +\n                Math.sqrt((palmBase3D[0] - index3D[0])  ** 2 + (palmBase3D[1] - index3D[1])  ** 2) +\n                Math.sqrt((palmBase3D[0] - middle3D[0]) ** 2 + (palmBase3D[1] - middle3D[1]) ** 2) +\n                Math.sqrt((palmBase3D[0] - ring3D[0])   ** 2 + (palmBase3D[1] - ring3D[1])   ** 2) +\n                Math.sqrt((palmBase3D[0] - pinky3D[0])  ** 2 + (palmBase3D[1] - pinky3D[1])  ** 2)) / 5.;\n\n    let centerOfMass_x = (thumb3D[0] + index3D[0] + middle3D[0] + ring3D[0] + pinky3D[0]) / 5.;\n    let centerOfMass_y = (thumb3D[1] + index3D[1] + middle3D[1] + ring3D[1] + pinky3D[1]) / 5.;\n\n    let sumSquare = ((thumb3D[0]    - centerOfMass_x) / norm) ** 2 + ((thumb3D[1]    - centerOfMass_y) / norm) ** 2 +\n                    ((index3D[0]    - centerOfMass_x) / norm) ** 2 + ((index3D[1]    - centerOfMass_y) / norm) ** 2 +\n                    ((middle3D[0]   - centerOfMass_x) / norm) ** 2 + ((middle3D[1]   - centerOfMass_y) / norm) ** 2 +\n                    ((ring3D[0]     - centerOfMass_x) / norm) ** 2 + ((ring3D[1]     - centerOfMass_y) / norm) ** 2 +\n                    ((pinky3D[0]    - centerOfMass_x) / norm) ** 2 + ((pinky3D[1]    - centerOfMass_y) / norm) ** 2;\n\n    sumSquare = Math.sqrt(sumSquare / 5.);\n    return scale_to_char(sumSquare, 0.55, 0.1);\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n/**\n * Compute rotation: yaw\n *    :hand_prediction:       Object returned from model.estimateHands()\n *    :video_width:           Width of video\n *    :video_height:          Height of video\n * Compute angle between {thumb & pinky} and {x axis} in the xz plane, using depth of the finger tips\n */\nexport function compute_yaw(hand_prediction, video_width, video_height) {\n  // Each finger has 4 joints, from palm to tip: 0 to 3\n  let tip_joint = 3;\n\n  try {\n    let thumb3D = hand_prediction[0][\"annotations\"][\"thumb\"][tip_joint];\n    let pinky3D = hand_prediction[0][\"annotations\"][\"pinky\"][tip_joint];\n\n    let dist_x = Math.abs(thumb3D[0] - pinky3D[0]);\n    let dist_z = thumb3D[2] - pinky3D[2];\n\n    let angle = Math.atan(dist_z / dist_x);\n\n    return scale_to_char(angle, 1.57, -0.2);    // Max: 0.5 * PI\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n * Compute rotation: roll\n *    :hand_prediction:       Object returned from model.estimateHands()\n *    :video_width:           Width of video\n *    :video_height:          Height of video\n * Compute angle between {thumb & pinky} and {x axis} in the xy plane, using (x, y) of the finger tips\n */\nexport function compute_roll(hand_prediction, video_width, video_height) {\n  // Each finger has 4 joints, from palm to tip: 0 to 3\n  let tip_joint = 3;\n\n  try {\n    let thumb3D = hand_prediction[0][\"annotations\"][\"thumb\"][tip_joint];\n    let pinky3D = hand_prediction[0][\"annotations\"][\"pinky\"][tip_joint];\n\n    let dist_x = Math.abs(thumb3D[0] - pinky3D[0]);\n    let dist_y = thumb3D[1] - pinky3D[1];\n\n    let angle = Math.atan(dist_y / dist_x);\n\n    return scale_to_char(angle, 1.57, -0.2);    // Max: 0.5 * PI\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: \"fit-content\"\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function VideoContainer({children}) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        {children}\n      </CardContent>\n    </Card>\n  );\n}","import React from 'react';\nimport WebMidi from 'webmidi';\nimport {get_index_tip_x, get_index_tip_y, get_index_tip_z, compute_spread, compute_yaw, compute_roll, get_index_tip_to_base_dist} from '../coordinateTransform.js';\nimport * as handpose from '@tensorflow-models/handpose';\nimport * as tfjsWasm from '@tensorflow/tfjs-backend-wasm';\n// TODO(annxingyuan): read version from tfjsWasm directly once\n// https://github.com/tensorflow/tfjs/pull/2819 is merged.\nimport {version} from '@tensorflow/tfjs-backend-wasm/dist/version';\nimport * as tf from '@tensorflow/tfjs-core';\nimport Stats from \"stats-js\"\n// import Paper from '@material-ui/core/Paper';\nimport VideoContainer from './VideoContainer';\n\ntfjsWasm.setWasmPath(\n  `https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${\n      version}/dist/tfjs-backend-wasm.wasm`);\n\nlet videoWidth, videoHeight,\n fingerLookupIndices = {\n  thumb: [0, 1, 2, 3, 4],\n  indexFinger: [0, 5, 6, 7, 8],\n  middleFinger: [0, 9, 10, 11, 12],\n  ringFinger: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20]\n};  // for rendering each finger as a polyline\n\nconst VIDEO_WIDTH = 640;\nconst VIDEO_HEIGHT = 500;\n\nclass VideoFrame extends React.Component {\n\n    constructor(props){ \n        super(props);\n        this.state = {\n          backend: 'webgl'\n        }\n        this.videoRef = React.createRef()\n        this.canvasRef = React.createRef();\n    }\n\n    drawPoint(ctx, y, x, r) {\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n\n    drawKeypoints(ctx, keypoints) {\n      const keypointsArray = keypoints;\n\n      for (let i = 0; i < keypointsArray.length; i++) {\n        const y = keypointsArray[i][0];\n        const x = keypointsArray[i][1];\n        this.drawPoint(ctx, x - 2, y - 2, 3);\n      }\n\n      const fingers = Object.keys(fingerLookupIndices);\n      for (let i = 0; i < fingers.length; i++) {\n        const finger = fingers[i];\n        const points = fingerLookupIndices[finger].map(idx => keypoints[idx]);\n        this.drawPath(ctx, points, false);\n      }\n    }\n\n    drawPath(ctx, points, closePath) {\n\n      const region = new Path2D();\n      region.moveTo(points[0][0], points[0][1]);\n      for (let i = 1; i < points.length; i++) {\n        const point = points[i];\n        region.lineTo(point[0], point[1]);\n      }\n\n      if (closePath) {\n        region.closePath();\n      }\n      ctx.stroke(region);\n    }\n\n    async setupCamera() {\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error(\n            'Browser API navigator.mediaDevices.getUserMedia not available');\n      }\n\n      const video = this.videoRef.current;\n      const stream = await navigator.mediaDevices.getUserMedia({\n        'audio': false,\n        'video': {\n          facingMode: 'user',\n          // Only setting the video to a specified size in order to accommodate a\n          // point cloud, so on mobile devices accept the default size.\n          width: VIDEO_WIDTH,\n          height: VIDEO_HEIGHT\n        },\n      });\n\n      window.stream = stream;\n\n      video.srcObject = stream;\n\n      return new Promise((resolve) => {\n        video.onloadedmetadata = () => {\n          resolve(video);\n        };\n      });\n    }\n\n    async loadVideo() {\n      const video = await this.setupCamera();\n      video.play();\n      return video;\n    }\n\n\n    async componentDidMount(){\n      await tf.setBackend(this.state.backend);\n      const model = await handpose.load();\n      await this.setState({model:model}) // is this async or not\n      let video;\n\n\n      try {\n        video = await this.loadVideo();\n        this.props.onInitComplete();\n      } catch (e) {\n        // let info = document.getElementById('info');\n        // info.textContent = e.message;\n        // info.style.display = 'block';\n        console.error(e);\n        throw e;\n      }\n\n      this.landmarksRealTime(video);\n    }\n\n    componentDidUpdate(){\n      //It seems the drawing context is reset everytime the component updates\n      const canvas = this.canvasRef.current;\n      canvas.width = VIDEO_WIDTH;\n      canvas.height = VIDEO_HEIGHT;\n      const ctx = canvas.getContext('2d');\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n    }\n\n    async landmarksRealTime (video) {\n\n      const midi_output = WebMidi.outputs[0];\n      console.log(\"midi_output in landmarks:  \", midi_output?.name);\n      const {model} = this.state;\n      //TODO: move stats instance creation up to parent\n      const stats = new Stats();\n      stats.showPanel(0);\n      document.getElementById(\"control-area\").appendChild(stats.dom);\n      stats.domElement.style.position = \"absolute\"; \n      stats.domElement.style.bottom = \"200px\"; \n      stats.domElement.style.left = \"8px\"; \n      stats.domElement.style.top = \"\"; \n\n      videoWidth = video.videoWidth;\n      videoHeight = video.videoHeight;\n\n      const canvas = this.canvasRef.current;\n      canvas.width = videoWidth;\n      canvas.height = videoHeight;\n\n      const ctx = canvas.getContext('2d');\n\n      video.width = videoWidth;\n      video.height = videoHeight;\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n      ctx.strokeStyle = 'red';\n      ctx.fillStyle = 'red';\n\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n\n      const frameLandmarks = async () => {\n        ctx.strokeStyle = 'red';\n        ctx.fillStyle = 'red';\n  \n        const activeGestures = this.props.gestures;\n\n        stats.begin();\n        ctx.drawImage(\n            video, 0, 0, videoWidth, videoHeight, 0, 0, canvas.width,\n            canvas.height);\n\n        // Run inference\n        const predictions = await model.estimateHands(video, null, false);\n\n        if (predictions.length > 0) {\n          const result = predictions[0].landmarks;\n          this.drawKeypoints(ctx, result, predictions[0].annotations);\n\n          // Loop over gestures - if active, compute hand metrics and send midi message\n          const midiChannel = 1\n          const nordCutoffCC = 59;\n          const nordResonanceCC = 60;\n          const nordDrawbars1CC = 16;\n          const nordDrawbars2CC = 17;\n          const nordDrawbars3CC = 18;\n          const nordDrawbars4CC = 19;\n          const nordDrawbars5CC = 20;\n          const nordDrawbars6CC = 21;\n          const nordDrawbars7CC = 22;\n          const nordDrawbars8CC = 23;\n          const nordDrawbars9CC = 24;\n          const expressionPedal = 11;\n          const nordLeslieSpeedCC = 108;\n\n          let midiVal;\n          for (const [gestureType, isActive] of Object.entries(activeGestures)) {\n\n            if (gestureType.localeCompare(\"xcontrol\") === 0 && isActive) {\n              midiVal = get_index_tip_x(predictions, VIDEO_WIDTH, VIDEO_HEIGHT);\n              midi_output.sendControlChange(16, midiVal, midiChannel);\n              console.log(gestureType, midiVal);\n            }\n\n            if (gestureType.localeCompare(\"ycontrol\") === 0 && isActive) {\n              midiVal = get_index_tip_y(predictions, VIDEO_WIDTH, VIDEO_HEIGHT);\n              midi_output.sendControlChange(11, midiVal, midiChannel);\n              console.log(gestureType, midiVal);\n            }\n            if (gestureType.localeCompare(\"spread\") === 0 && isActive) {\n              midiVal = compute_spread(predictions, VIDEO_WIDTH, VIDEO_HEIGHT);\n              midi_output.sendControlChange(66, midiVal, midiChannel);\n              console.log(gestureType, midiVal);\n            }\n\n            if (gestureType.localeCompare(\"rotation\") === 0 && isActive) {\n              console.log(gestureType);\n            }\n\n            if (gestureType.localeCompare(\"roll\") === 0 && isActive) {\n              midiVal = compute_roll(predictions, VIDEO_WIDTH, VIDEO_HEIGHT);\n              midi_output.sendControlChange(15, midiVal, midiChannel);\n              console.log(gestureType, midiVal);\n            }\n\n            if (gestureType.localeCompare(\"proximity\") === 0 && isActive) {\n              //midiVal = get_index_tip_z(predictions, VIDEO_WIDTH, VIDEO_HEIGHT);\n              midiVal = get_index_tip_to_base_dist(predictions, VIDEO_WIDTH, VIDEO_HEIGHT);\n              midi_output.sendControlChange(17, midiVal, midiChannel);\n              console.log(gestureType, midiVal);\n            }\n\n            if (gestureType.localeCompare(\"pitch\") === 0 && isActive) {\n              console.log(gestureType);\n            }\n\n            if (gestureType.localeCompare(\"yaw\") === 0 && isActive) {\n              midiVal = compute_yaw(predictions, VIDEO_WIDTH, VIDEO_HEIGHT);\n              midi_output.sendControlChange(16, midiVal, midiChannel);\n              console.log(gestureType, midiVal);\n            }\n\n          }\n        }\n        stats.end();\n        requestAnimationFrame(frameLandmarks);\n      };\n\n      frameLandmarks();\n    };\n\n    showDetections(predictions) {\n        const ctx = this.canvasRef.current.getContext(\"2d\");\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        const font = \"24px helvetica\";\n        ctx.font = font;\n        ctx.textBaseline = \"top\";\n\n        predictions.forEach(prediction => {\n          const x = prediction.bbox[0];\n          const y = prediction.bbox[1];\n          const width = prediction.bbox[2];\n          const height = prediction.bbox[3];\n          // Draw the bounding box.\n          ctx.strokeStyle = \"#2fff00\";\n          ctx.lineWidth = 1;\n          ctx.strokeRect(x, y, width, height);\n          // Draw the label background.\n          ctx.fillStyle = \"#2fff00\";\n          const textWidth = ctx.measureText(prediction.class).width;\n          const textHeight = parseInt(font, 10);\n          // draw top left rectangle\n          ctx.fillRect(x, y, textWidth + 10, textHeight + 10);\n          // draw bottom left rectangle\n          ctx.fillRect(x, y + height - textHeight, textWidth + 15, textHeight + 10);\n\n          // Draw the text last to ensure it's on top.\n          ctx.fillStyle = \"#000000\";\n          ctx.fillText(prediction.class, x, y);\n          ctx.fillText(prediction.score.toFixed(2), x, y + height - textHeight);\n        });\n      };\n\n      render() {\n        return (\n            <div id=\"video-container\">\n              <video\n                style={{\n                  display:\"none\",\n                  transform: \"rotateY(180deg)\"\n                }}\n                ref={this.videoRef}\n                width={VIDEO_WIDTH}\n                height={VIDEO_HEIGHT}\n              />\n              <VideoContainer>\n                <canvas ref={this.canvasRef} width={videoWidth} height={videoHeight} />\n              </VideoContainer>\n            </div>\n          );\n      }\n\n}\n\nexport default VideoFrame\n","import React from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#673ab7\"\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function GestureControl({onGestureToggle, gestures}) {\n  const classes = useStyles();\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">\n        <Typography variant=\"h5\" >\n          Guestures\n        </Typography>\n      </FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={gestures.xcontrol} onChange={onGestureToggle} name=\"xcontrol\" />}\n          label=\"X Control\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          control={<Switch checked={gestures.ycontrol} onChange={onGestureToggle} name=\"ycontrol\" />}\n          label=\"Y Control\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          control={<Switch checked={gestures.spread} onChange={onGestureToggle} name=\"spread\" />}\n          label=\"Spread\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          control={<Switch checked={gestures.rotation} onChange={onGestureToggle} name=\"rotation\" />}\n          label=\"Rotation\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          control={<Switch checked={gestures.roll} onChange={onGestureToggle} name=\"roll\" />}\n          label=\"Roll\"\n          labelPlacement=\"start\"\n        />\n         <FormControlLabel\n          control={<Switch checked={gestures.proximity} onChange={onGestureToggle} name=\"proximity\" />}\n          label=\"Proximity\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          control={<Switch checked={gestures.pitch} onChange={onGestureToggle} name=\"pitch\" />}\n          label=\"Pitch\"\n          labelPlacement=\"start\"\n        />\n         <FormControlLabel\n          control={<Switch checked={gestures.yaw} onChange={onGestureToggle} name=\"yaw\" />}\n          label=\"Yaw\"\n          labelPlacement=\"start\"\n        />\n      </FormGroup>\n      <FormHelperText>Use this control what midi signals are generated</FormHelperText>\n    </FormControl>\n  );\n}\n\n\n// rotation: false,\n// spread: false,\n// proximity: false,\n// roll: false,\n// pitch: false,\n// yaw: false \n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nconst Loader = ({open}) => {\n  return (\n      <Backdrop open={open} style={{\n          zIndex: 20,\n          backgroundColor: \"#673ab7\",\n          color:\"white\"\n      }}>\n          <div style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              height: 500\n          }}>\n\n        <CircularProgress color=\"inherit\" size=\"m\" style={{\n            marginBottom: \"4em\",\n        }}/>\n        <Typography variant=\"h6\" gutterBottom>\n            Initializing Conductor...\n        </Typography>\n          </div>\n      </Backdrop>\n  );\n}\n\nexport default Loader;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#673ab7\"\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h5\" className={classes.title}>\n              Conductor\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header","import React from 'react';\nimport VideoFrame from './VideoFrame';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport GestureControl from './GestureControl'\nimport Loader from './Loader';\nimport Header from './Header';\n\n\nconst VIDEO_WIDTH = 640;\nconst VIDEO_HEIGHT = 500\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      video: {\n        width: VIDEO_WIDTH,\n        heigh: VIDEO_HEIGHT,\n        element: undefined\n      },\n      tf : {\n        backend: \"webgl\",\n        model: undefined,\n      },\n      initializing: true,\n      predictions: [],\n      gestures: {\n        xcontrol: false,\n        ycontrol: false,\n        spread: false,\n        rotation: false,\n        proximity: false,\n        roll: false,\n        pitch: false,\n        yaw: false \n      }\n    }\n    this.toggleMapping = this.toggleMapping.bind(this);\n    this.handleGestureToggle = this.handleGestureToggle.bind(this);\n    this.completeInit = this.completeInit.bind(this);\n    this.videoRef = React.createRef();\n  }\n\n  async componentDidMount(){\n   \n  }\n\n  toggleMapping(){\n    const{mapping} = this.state;\n    this.setState({mapping: !mapping})\n    console.log(\"Mapping is now: \", !mapping);\n  }\n\n  handleGestureToggle(event){\n    console.log(\"toggle event\", event)\n    this.setState( {gestures: { ...this.state.gestures, [event.target.name]: event.target.checked }});\n  }\n\n  completeInit(){\n    this.setState({initializing:false})\n  }\n\n  render() {\n    const classes = {\n      root: {\n        flexGrow: 1,\n        backgroundColor: \"#53446E\",\n        height: \"100vh\"\n      },\n      paper: {\n        padding: 32,\n        height: \"100%\",\n        textAlign: 'center',\n        position: \"relative\"\n      },\n\n      videoArea: {\n        textAlign: 'center',\n      }\n    }\n    const {gestures, initializing } = this.state;\n    return ( \n     <div>\n      <Loader open={initializing}/> \n      <Header/>\n      <Grid container style={classes.root}>\n          <Grid item xs={3} container>\n            <Paper style={classes.paper} elevation={0} variant=\"outlined\" square id=\"control-area\">\n              <GestureControl onGestureToggle={this.handleGestureToggle} gestures={gestures}/>\n            </Paper>\n          </Grid>\n          <Grid container id=\"videoframe-area\" item xs={9} \n          style={classes.videoArea} \n          justify=\"center\" \n          alignItems=\"center\">\n            <VideoFrame gestures={gestures} onInitComplete={this.completeInit}></VideoFrame>\n          </Grid>\n      </Grid>\n     </div> \n      );\n  }\n}\nexport default App;\n","import React from 'react'\nimport App from './App'\n\nconst Root = () => (<App/>);\n\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import WebMidi from 'webmidi'\nexport const webMidiInit = () => (new Promise((resolve, reject) => {\n    WebMidi.enable(function (err) {\n\n      if (err) {\n        console.log(\"WebMidi could not be enabled.\", err);\n        reject(err);\n\n      } else {\n        console.log(\"WebMidi enabled!\");\n        resolve();\n      }\n    })\n  }));\n\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/Root';\nimport * as serviceWorker from './serviceWorker';\nimport {webMidiInit} from './web-midi'\n\nasync function init() {\n  await webMidiInit();\n  ReactDOM.render(\n      <Root />,\n    document.getElementById('root')\n  );\n}\n\ninit();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}